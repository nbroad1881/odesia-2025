import os
import unittest

from transformers import AutoTokenizer
from dotenv import load_dotenv

print("Loaded .env:", load_dotenv("../.env", override=True))

import sys

sys.path.append("/drive2/kaggle/odesia")
from predict.post_process import post_process_diann2


tokenizer = AutoTokenizer.from_pretrained("mistralai/Ministral-8B-Instruct-2410")


class TestPostProcessDiann2(unittest.TestCase):
    def test_post_process_diann1(self):

        tokens = [
            "Objectives",
            ".",
            "The",
            "present",
            "research",
            "aims",
            "to",
            "describe",
            "the",
            "knowledge",
            "of",
            "elementary",
            "school",
            "teachers",
            "about",
            "attention",
            "deficit",
            "hyperactivity",
            "disorder",
            "(",
            "ADHD",
            ")",
            "through",
            "interviews",
            "about",
            "general",
            "information",
            ",",
            "symptoms/diagnosis",
            "and",
            "treatment",
            ",",
            "in",
            "addition",
            "to",
            "perceived",
            "self",
            "-",
            "efficacy",
            ".",
            "Methods",
            ".",
            "A",
            "descriptive",
            "cross",
            "-",
            "sectional",
            "population",
            "study",
            "was",
            "carried",
            "out",
            ",",
            "involving",
            "62",
            "teachers",
            "from",
            "public",
            "schools",
            "in",
            "the",
            "municipality",
            "of",
            "Sabaneta",
            ".",
            "The",
            "teachers",
            "were",
            "evaluated",
            "by",
            "the",
            "Spanish",
            "adaptation",
            "of",
            "the",
            "Knowledge",
            "of",
            "Attention",
            "Deficit",
            "Hyperactivity",
            "Disorder",
            "(",
            "KADDS",
            ")",
            ",",
            "an",
            "estimation",
            "scale",
            "composed",
            "of",
            "36",
            "items",
            "of",
            "three",
            "alternative",
            "answers",
            "(",
            "true",
            ",",
            "false",
            "and",
            "I",
            "do",
            "not",
            "know",
            ")",
            ".",
            "Results",
            ".",
            "Teachers",
            "correctly",
            "answered",
            "a",
            "little",
            "less",
            "than",
            "half",
            "of",
            "the",
            "items",
            "in",
            "the",
            "total",
            "questionnaire",
            "(",
            "48",
            ".52%",
            ")",
            ".",
            "Specifically",
            ",",
            "it",
            "was",
            "in",
            "the",
            "subscale",
            "of",
            "dymptoms/diagnosis",
            "in",
            "which",
            "they",
            "presented",
            "more",
            "hits",
            "with",
            "69",
            ".35%",
            ",",
            "followed",
            "by",
            "the",
            "treatment",
            "subscale",
            "(",
            "45",
            ".30%",
            ")",
            ",",
            "and",
            "finally",
            "the",
            "general",
            "information",
            "(",
            "38",
            ".60%",
            ")",
            ".",
            "Conclusions",
            ".",
            "According",
            "to",
            "the",
            "data",
            "obtained",
            ",",
            "the",
            "need",
            "for",
            "interventions",
            "on",
            "the",
            "subject",
            "is",
            "confirmed",
            ",",
            "so",
            "that",
            "this",
            "is",
            "reflected",
            "in",
            "new",
            "teaching",
            "techniques",
            "that",
            "facilitate",
            "the",
            "learning",
            "and",
            "development",
            "of",
            "children",
            "with",
            "the",
            "disorder",
            ".",
            "",
        ]

        gt = [
            "O",
            "O",
            "O",
            "O",
            "O",
            "O",
            "O",
            "O",
            "O",
            "O",
            "O",
            "O",
            "O",
            "O",
            "O",
            "B-DIS",
            "I-DIS",
            "I-DIS",
            "I-DIS",
            "O",
            "B-DIS",
            "O",
            "O",
            "O",
            "O",
            "O",
            "O",
            "O",
            "O",
            "O",
            "O",
            "O",
            "O",
            "O",
            "O",
            "O",
            "O",
            "O",
            "O",
            "O",
            "O",
            "O",
            "O",
            "O",
            "O",
            "O",
            "O",
            "O",
            "O",
            "O",
            "O",
            "O",
            "O",
            "O",
            "O",
            "O",
            "O",
            "O",
            "O",
            "O",
            "O",
            "O",
            "O",
            "O",
            "O",
            "O",
            "O",
            "O",
            "O",
            "O",
            "O",
            "O",
            "O",
            "O",
            "O",
            "O",
            "O",
            "O",
            "O",
            "O",
            "O",
            "O",
            "O",
            "O",
            "O",
            "O",
            "O",
            "O",
            "O",
            "O",
            "O",
            "O",
            "O",
            "O",
            "O",
            "O",
            "O",
            "O",
            "O",
            "O",
            "O",
            "O",
            "O",
            "O",
            "O",
            "O",
            "O",
            "O",
            "O",
            "O",
            "O",
            "O",
            "O",
            "O",
            "O",
            "O",
            "O",
            "O",
            "O",
            "O",
            "O",
            "O",
            "O",
            "O",
            "O",
            "O",
            "O",
            "O",
            "O",
            "O",
            "O",
            "O",
            "O",
            "O",
            "O",
            "O",
            "O",
            "O",
            "O",
            "O",
            "O",
            "O",
            "O",
            "O",
            "O",
            "O",
            "O",
            "O",
            "O",
            "O",
            "O",
            "O",
            "O",
            "O",
            "O",
            "O",
            "O",
            "O",
            "O",
            "O",
            "O",
            "O",
            "O",
            "O",
            "O",
            "O",
            "O",
            "O",
            "O",
            "O",
            "O",
            "O",
            "O",
            "O",
            "O",
            "O",
            "O",
            "O",
            "O",
            "O",
            "O",
            "O",
            "O",
            "O",
            "O",
            "O",
            "O",
            "O",
            "O",
            "O",
            "O",
            "O",
            "O",
            "O",
            "O",
            "O",
            "O",
            "O",
            "O",
            "O",
            "O",
            "O",
            "O",
            "O",
            "O",
            "O",
            "O",
            "O",
        ]

        preds = [1, 4, 2452, 4242, 47033, 14137, 16570, 18772, 1010, 5516, 26205, 2]
        # "attention deficit hyperactivity disorder"

        self.assertEqual(post_process_diann2(tokens, preds, tokenizer, "[/INST]"), gt)

    def test_post_process_diann2(self):

        tokens = [
            "Abstract",
            "Diabetic",
            "retinopathy",
            "(",
            "DR",
            ")",
            "is",
            "the",
            "most",
            "frequent",
            "complication",
            "of",
            "diabetes",
            "and",
            "is",
            "one",
            "of",
            "the",
            "main",
            "causes",
            "of",
            "blindness",
            "in",
            "the",
            "population",
            "of",
            "working",
            "age",
            "in",
            "industrialized",
            "countries",
            ".",
            "In",
            "the",
            "last",
            "few",
            "years",
            ",",
            "two",
            "studies",
            "(",
            "FIELD",
            "and",
            "ACCORD",
            "-",
            "EYE",
            ")",
            "have",
            "shown",
            "that",
            "fenofibrate",
            "is",
            "a",
            "therapeutic",
            "option",
            "in",
            "the",
            "early",
            "stages",
            "of",
            "DR",
            ".",
            "In",
            "the",
            "FIELD",
            "study",
            ",",
            "a",
            "30%",
            "reduction",
            "was",
            "found",
            "in",
            "the",
            "need",
            "for",
            "laser",
            "photocoagulation",
            "therapy",
            "in",
            "the",
            "group",
            "of",
            "patients",
            "treated",
            "with",
            "fenofibrate",
            ".",
            "This",
            "beneficial",
            "effect",
            "was",
            "confirmed",
            "in",
            "the",
            "ACCORD",
            "-",
            "EYE",
            "study",
            ",",
            "which",
            "showed",
            "a",
            "40%",
            "reduction",
            "in",
            "DR",
            "progression",
            "in",
            "patients",
            "treated",
            "with",
            "fenofibrate",
            "and",
            "simvastatin",
            "compared",
            "with",
            "those",
            "treated",
            "with",
            "simvastatin",
            "and",
            "placebo",
            ".",
            "Despite",
            "the",
            "solidity",
            "of",
            "these",
            "clinical",
            "results",
            ",",
            "the",
            "mechanisms",
            "through",
            "which",
            "fenofibrate",
            "exerts",
            "a",
            "beneficial",
            "effect",
            "in",
            "DR",
            "remain",
            "unclear",
            ".",
            "However",
            ",",
            "these",
            "effects",
            "have",
            "been",
            "related",
            "to",
            "its",
            "antioxidant",
            "and",
            "anti",
            "-",
            "inflammatory",
            "action",
            ",",
            "an",
            "antiapoptotic",
            "effect",
            ",",
            "its",
            "ability",
            "to",
            "preserve",
            "the",
            "function",
            "of",
            "the",
            "blood",
            "-",
            "retinal",
            "barrier",
            ",",
            "and",
            "possible",
            "neuroprotective",
            "and",
            "antiangiogenic",
            "effects",
            ".",
            "Fenofibrate",
            "may",
            "also",
            "act",
            "through",
            "«non",
            "-",
            "classical»",
            "lipid",
            "mechanisms",
            "such",
            "as",
            "an",
            "increase",
            "in",
            "apoA1",
            "or",
            "its",
            "ability",
            "to",
            "decrease",
            "small",
            ",",
            "dense",
            "LDL",
            "particles",
            ".",
            "Knowledge",
            "of",
            "these",
            "mechanisms",
            "will",
            "provide",
            "a",
            "clearer",
            "perspective",
            "on",
            "the",
            "role",
            "of",
            "this",
            "drug",
            "in",
            "the",
            "management",
            "of",
            "DR",
            "and",
            "will",
            "also",
            "help",
            "to",
            "develop",
            "new",
            "therapeutic",
            "strategies",
            "to",
            "alleviate",
            "the",
            "devastating",
            "effects",
            "of",
            "this",
            "complication",
            "of",
            "diabetes",
            ".",
        ]
        gt = [
            "O",
            "O",
            "O",
            "O",
            "O",
            "O",
            "O",
            "O",
            "O",
            "O",
            "O",
            "O",
            "O",
            "O",
            "O",
            "O",
            "O",
            "O",
            "O",
            "O",
            "O",
            "B-DIS",
            "O",
            "O",
            "O",
            "O",
            "O",
            "O",
            "O",
            "O",
            "O",
            "O",
            "O",
            "O",
            "O",
            "O",
            "O",
            "O",
            "O",
            "O",
            "O",
            "O",
            "O",
            "O",
            "O",
            "O",
            "O",
            "O",
            "O",
            "O",
            "O",
            "O",
            "O",
            "O",
            "O",
            "O",
            "O",
            "O",
            "O",
            "O",
            "O",
            "O",
            "O",
            "O",
            "O",
            "O",
            "O",
            "O",
            "O",
            "O",
            "O",
            "O",
            "O",
            "O",
            "O",
            "O",
            "O",
            "O",
            "O",
            "O",
            "O",
            "O",
            "O",
            "O",
            "O",
            "O",
            "O",
            "O",
            "O",
            "O",
            "O",
            "O",
            "O",
            "O",
            "O",
            "O",
            "O",
            "O",
            "O",
            "O",
            "O",
            "O",
            "O",
            "O",
            "O",
            "O",
            "O",
            "O",
            "O",
            "O",
            "O",
            "O",
            "O",
            "O",
            "O",
            "O",
            "O",
            "O",
            "O",
            "O",
            "O",
            "O",
            "O",
            "O",
            "O",
            "O",
            "O",
            "O",
            "O",
            "O",
            "O",
            "O",
            "O",
            "O",
            "O",
            "O",
            "O",
            "O",
            "O",
            "O",
            "O",
            "O",
            "O",
            "O",
            "O",
            "O",
            "O",
            "O",
            "O",
            "O",
            "O",
            "O",
            "O",
            "O",
            "O",
            "O",
            "O",
            "O",
            "O",
            "O",
            "O",
            "O",
            "O",
            "O",
            "O",
            "O",
            "O",
            "O",
            "O",
            "O",
            "O",
            "O",
            "O",
            "O",
            "O",
            "O",
            "O",
            "O",
            "O",
            "O",
            "O",
            "O",
            "O",
            "O",
            "O",
            "O",
            "O",
            "O",
            "O",
            "O",
            "O",
            "O",
            "O",
            "O",
            "O",
            "O",
            "O",
            "O",
            "O",
            "O",
            "O",
            "O",
            "O",
            "O",
            "O",
            "O",
            "O",
            "O",
            "O",
            "O",
            "O",
            "O",
            "O",
            "O",
            "O",
            "O",
            "O",
            "O",
            "O",
            "O",
            "O",
            "O",
            "O",
            "O",
            "O",
            "O",
            "O",
            "O",
            "O",
            "O",
            "O",
            "O",
            "O",
            "O",
            "O",
            "O",
            "O",
            "O",
            "O",
            "O",
            "O",
            "O",
            "O",
            "O",
            "O",
            "O",
            "O",
            "O",
            "O",
            "O",
            "O",
            "O",
            "O",
        ]

        preds = [1, 4, 2970, 1629, 3651, 2]

        # "blindness"

        self.assertEqual(post_process_diann2(tokens, preds, tokenizer, "[/INST]"), gt)


if __name__ == "__main__":
    unittest.main()
